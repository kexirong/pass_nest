import "package:flutter/material.dart";

class MaterialTheme1 {
  const MaterialTheme1();

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff36618e),
      surfaceTint: Color(0xff36618e),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xffd1e4ff),
      onPrimaryContainer: Color(0xff001d36),
      secondary: Color(0xff27638a),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffcae6ff),
      onSecondaryContainer: Color(0xff001e30),
      tertiary: Color(0xff006876),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffa1efff),
      onTertiaryContainer: Color(0xff001f25),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff410002),
      surface: Color(0xfff4fbf8),
      onSurface: Color(0xff161d1c),
      onSurfaceVariant: Color(0xff40484c),
      outline: Color(0xff70787d),
      outlineVariant: Color(0xffc0c8cd),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2b3230),
      inversePrimary: Color(0xffa0cafd),
      primaryFixed: Color(0xffd1e4ff),
      onPrimaryFixed: Color(0xff001d36),
      primaryFixedDim: Color(0xffa0cafd),
      onPrimaryFixedVariant: Color(0xff194975),
      secondaryFixed: Color(0xffcae6ff),
      onSecondaryFixed: Color(0xff001e30),
      secondaryFixedDim: Color(0xff96cdf8),
      onSecondaryFixedVariant: Color(0xff004b70),
      tertiaryFixed: Color(0xffa1efff),
      onTertiaryFixed: Color(0xff001f25),
      tertiaryFixedDim: Color(0xff83d3e3),
      onTertiaryFixedVariant: Color(0xff004e59),
      surfaceDim: Color(0xffd5dbd9),
      surfaceBright: Color(0xfff4fbf8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xffeff5f2),
      surfaceContainer: Color(0xffe9efed),
      surfaceContainerHigh: Color(0xffe3eae7),
      surfaceContainerHighest: Color(0xffdde4e1),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff134570),
      surfaceTint: Color(0xff36618e),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff4d77a6),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff00476a),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff417aa1),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff004a55),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff267f8e),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff8c0009),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffda342e),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfff4fbf8),
      onSurface: Color(0xff161d1c),
      onSurfaceVariant: Color(0xff3c4448),
      outline: Color(0xff586065),
      outlineVariant: Color(0xff747c80),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2b3230),
      inversePrimary: Color(0xffa0cafd),
      primaryFixed: Color(0xff4d77a6),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff335e8b),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff417aa1),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff246187),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff267f8e),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff006673),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffd5dbd9),
      surfaceBright: Color(0xfff4fbf8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xffeff5f2),
      surfaceContainer: Color(0xffe9efed),
      surfaceContainerHigh: Color(0xffe3eae7),
      surfaceContainerHighest: Color(0xffdde4e1),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff002341),
      surfaceTint: Color(0xff36618e),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff134570),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff002539),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff00476a),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff00272d),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff004a55),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff4e0002),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff8c0009),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfff4fbf8),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff1d2529),
      outline: Color(0xff3c4448),
      outlineVariant: Color(0xff3c4448),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2b3230),
      inversePrimary: Color(0xffe2edff),
      primaryFixed: Color(0xff134570),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff002e52),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff00476a),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff003049),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff004a55),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff00323a),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffd5dbd9),
      surfaceBright: Color(0xfff4fbf8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xffeff5f2),
      surfaceContainer: Color(0xffe9efed),
      surfaceContainerHigh: Color(0xffe3eae7),
      surfaceContainerHighest: Color(0xffdde4e1),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffa0cafd),
      surfaceTint: Color(0xffa0cafd),
      onPrimary: Color(0xff003258),
      primaryContainer: Color(0xff194975),
      onPrimaryContainer: Color(0xffd1e4ff),
      secondary: Color(0xff96cdf8),
      onSecondary: Color(0xff00344f),
      secondaryContainer: Color(0xff004b70),
      onSecondaryContainer: Color(0xffcae6ff),
      tertiary: Color(0xff83d3e3),
      onTertiary: Color(0xff00363e),
      tertiaryContainer: Color(0xff004e59),
      onTertiaryContainer: Color(0xffa1efff),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff0e1513),
      onSurface: Color(0xffdde4e1),
      onSurfaceVariant: Color(0xffc0c8cd),
      outline: Color(0xff8a9297),
      outlineVariant: Color(0xff40484c),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffdde4e1),
      inversePrimary: Color(0xff36618e),
      primaryFixed: Color(0xffd1e4ff),
      onPrimaryFixed: Color(0xff001d36),
      primaryFixedDim: Color(0xffa0cafd),
      onPrimaryFixedVariant: Color(0xff194975),
      secondaryFixed: Color(0xffcae6ff),
      onSecondaryFixed: Color(0xff001e30),
      secondaryFixedDim: Color(0xff96cdf8),
      onSecondaryFixedVariant: Color(0xff004b70),
      tertiaryFixed: Color(0xffa1efff),
      onTertiaryFixed: Color(0xff001f25),
      tertiaryFixedDim: Color(0xff83d3e3),
      onTertiaryFixedVariant: Color(0xff004e59),
      surfaceDim: Color(0xff0e1513),
      surfaceBright: Color(0xff343b39),
      surfaceContainerLowest: Color(0xff090f0e),
      surfaceContainerLow: Color(0xff161d1c),
      surfaceContainer: Color(0xff1a2120),
      surfaceContainerHigh: Color(0xff252b2a),
      surfaceContainerHighest: Color(0xff303635),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffa6ceff),
      surfaceTint: Color(0xffa0cafd),
      onPrimary: Color(0xff00172d),
      primaryContainer: Color(0xff6a94c4),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xff9ad1fc),
      onSecondary: Color(0xff001828),
      secondaryContainer: Color(0xff5f96bf),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xff87d7e7),
      onTertiary: Color(0xff001a1e),
      tertiaryContainer: Color(0xff4a9cab),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffbab1),
      onError: Color(0xff370001),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff0e1513),
      onSurface: Color(0xfff6fcf9),
      onSurfaceVariant: Color(0xffc4ccd1),
      outline: Color(0xff9ca4a9),
      outlineVariant: Color(0xff7c8489),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffdde4e1),
      inversePrimary: Color(0xff1b4a76),
      primaryFixed: Color(0xffd1e4ff),
      onPrimaryFixed: Color(0xff001225),
      primaryFixedDim: Color(0xffa0cafd),
      onPrimaryFixedVariant: Color(0xff003862),
      secondaryFixed: Color(0xffcae6ff),
      onSecondaryFixed: Color(0xff001320),
      secondaryFixedDim: Color(0xff96cdf8),
      onSecondaryFixedVariant: Color(0xff003a57),
      tertiaryFixed: Color(0xffa1efff),
      onTertiaryFixed: Color(0xff001418),
      tertiaryFixedDim: Color(0xff83d3e3),
      onTertiaryFixedVariant: Color(0xff003c45),
      surfaceDim: Color(0xff0e1513),
      surfaceBright: Color(0xff343b39),
      surfaceContainerLowest: Color(0xff090f0e),
      surfaceContainerLow: Color(0xff161d1c),
      surfaceContainer: Color(0xff1a2120),
      surfaceContainerHigh: Color(0xff252b2a),
      surfaceContainerHighest: Color(0xff303635),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xfffafaff),
      surfaceTint: Color(0xffa0cafd),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffa6ceff),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xfff9fbff),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xff9ad1fc),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xfff2fcff),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xff87d7e7),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xfffff9f9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffbab1),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff0e1513),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xfff7fbff),
      outline: Color(0xffc4ccd1),
      outlineVariant: Color(0xffc4ccd1),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffdde4e1),
      inversePrimary: Color(0xff002b4e),
      primaryFixed: Color(0xffd9e8ff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffa6ceff),
      onPrimaryFixedVariant: Color(0xff00172d),
      secondaryFixed: Color(0xffd3eaff),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xff9ad1fc),
      onSecondaryFixedVariant: Color(0xff001828),
      tertiaryFixed: Color(0xffb1f1ff),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xff87d7e7),
      onTertiaryFixedVariant: Color(0xff001a1e),
      surfaceDim: Color(0xff0e1513),
      surfaceBright: Color(0xff343b39),
      surfaceContainerLowest: Color(0xff090f0e),
      surfaceContainerLow: Color(0xff161d1c),
      surfaceContainer: Color(0xff1a2120),
      surfaceContainerHigh: Color(0xff252b2a),
      surfaceContainerHighest: Color(0xff303635),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: const TextTheme().apply(
          bodyColor: colorScheme.onSurface,
          displayColor: colorScheme.onSurface,
        ),
        scaffoldBackgroundColor: colorScheme.surface,
        canvasColor: colorScheme.surface,
        // pageTransitionsTheme: const PageTransitionsTheme(
        //   builders: {
        //     // Use PredictiveBackPageTransitionsBuilder to get the predictive back route transition!
        //     TargetPlatform.android: PredictiveBackPageTransitionsBuilder(),
        //   },
        // ),
      );

  List<ExtendedColor> get extendedColors => [];
}

class MaterialTheme2 {
  const MaterialTheme2();

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff273a9f),
      surfaceTint: Color(0xff4355b9),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff4f60c5),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff565c84),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffd0d5ff),
      onSecondaryContainer: Color(0xff383f65),
      tertiary: Color(0xff0061a4),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff3ca3ff),
      onTertiaryContainer: Color(0xff001226),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff410002),
      surface: Color(0xfffbf8ff),
      onSurface: Color(0xff1a1b22),
      onSurfaceVariant: Color(0xff454652),
      outline: Color(0xff757684),
      outlineVariant: Color(0xffc5c5d4),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3037),
      inversePrimary: Color(0xffbac3ff),
      primaryFixed: Color(0xffdee0ff),
      onPrimaryFixed: Color(0xff00105c),
      primaryFixedDim: Color(0xffbac3ff),
      onPrimaryFixedVariant: Color(0xff293ca0),
      secondaryFixed: Color(0xffdee0ff),
      onSecondaryFixed: Color(0xff12183d),
      secondaryFixedDim: Color(0xffbec4f2),
      onSecondaryFixedVariant: Color(0xff3e446b),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001d36),
      tertiaryFixedDim: Color(0xff9ecaff),
      onTertiaryFixedVariant: Color(0xff00497d),
      surfaceDim: Color(0xffdbd9e2),
      surfaceBright: Color(0xfffbf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff4f2fc),
      surfaceContainer: Color(0xffefedf6),
      surfaceContainerHigh: Color(0xffe9e7f0),
      surfaceContainerHighest: Color(0xffe3e1ea),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff24389c),
      surfaceTint: Color(0xff4355b9),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff4f60c5),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff3a4066),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff6c729b),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff004576),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff0078c8),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff8c0009),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffda342e),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffbf8ff),
      onSurface: Color(0xff1a1b22),
      onSurfaceVariant: Color(0xff41424e),
      outline: Color(0xff5d5e6b),
      outlineVariant: Color(0xff797a87),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3037),
      inversePrimary: Color(0xffbac3ff),
      primaryFixed: Color(0xff5b6cd1),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff4153b7),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff6c729b),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff535981),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff0078c8),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff005fa0),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffdbd9e2),
      surfaceBright: Color(0xfffbf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff4f2fc),
      surfaceContainer: Color(0xffefedf6),
      surfaceContainerHigh: Color(0xffe9e7f0),
      surfaceContainerHighest: Color(0xffe3e1ea),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff00146d),
      surfaceTint: Color(0xff4355b9),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff24389c),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff191f44),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff3a4066),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff002341),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff004576),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff4e0002),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff8c0009),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffbf8ff),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff22232f),
      outline: Color(0xff41424e),
      outlineVariant: Color(0xff41424e),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3037),
      inversePrimary: Color(0xffeaeaff),
      primaryFixed: Color(0xff24389c),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff011c86),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff3a4066),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff242a4f),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff004576),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff002e52),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffdbd9e2),
      surfaceBright: Color(0xfffbf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff4f2fc),
      surfaceContainer: Color(0xffefedf6),
      surfaceContainerHigh: Color(0xffe9e7f0),
      surfaceContainerHighest: Color(0xffe3e1ea),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffbac3ff),
      surfaceTint: Color(0xffbac3ff),
      onPrimary: Color(0xff08218a),
      primaryContainer: Color(0xff3547ab),
      onPrimaryContainer: Color(0xfff1f0ff),
      secondary: Color(0xffbec4f2),
      onSecondary: Color(0xff272e53),
      secondaryContainer: Color(0xff343b60),
      onSecondaryContainer: Color(0xffc8cefc),
      tertiary: Color(0xff9ecaff),
      onTertiary: Color(0xff003258),
      tertiaryContainer: Color(0xff0078c8),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff121319),
      onSurface: Color(0xffe3e1ea),
      onSurfaceVariant: Color(0xffc5c5d4),
      outline: Color(0xff8f909e),
      outlineVariant: Color(0xff454652),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe3e1ea),
      inversePrimary: Color(0xff4355b9),
      primaryFixed: Color(0xffdee0ff),
      onPrimaryFixed: Color(0xff00105c),
      primaryFixedDim: Color(0xffbac3ff),
      onPrimaryFixedVariant: Color(0xff293ca0),
      secondaryFixed: Color(0xffdee0ff),
      onSecondaryFixed: Color(0xff12183d),
      secondaryFixedDim: Color(0xffbec4f2),
      onSecondaryFixedVariant: Color(0xff3e446b),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001d36),
      tertiaryFixedDim: Color(0xff9ecaff),
      onTertiaryFixedVariant: Color(0xff00497d),
      surfaceDim: Color(0xff121319),
      surfaceBright: Color(0xff383940),
      surfaceContainerLowest: Color(0xff0d0e14),
      surfaceContainerLow: Color(0xff1a1b22),
      surfaceContainer: Color(0xff1f1f26),
      surfaceContainerHigh: Color(0xff292930),
      surfaceContainerHighest: Color(0xff34343b),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffc0c7ff),
      surfaceTint: Color(0xffbac3ff),
      onPrimary: Color(0xff000c4e),
      primaryContainer: Color(0xff7789f0),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffc2c8f6),
      onSecondary: Color(0xff0c1337),
      secondaryContainer: Color(0xff888eb9),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffa6ceff),
      onTertiary: Color(0xff00172d),
      tertiaryContainer: Color(0xff1e95f2),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffbab1),
      onError: Color(0xff370001),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff121319),
      onSurface: Color(0xfffdfaff),
      onSurfaceVariant: Color(0xffcac9d9),
      outline: Color(0xffa1a2b0),
      outlineVariant: Color(0xff818290),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe3e1ea),
      inversePrimary: Color(0xff2a3da1),
      primaryFixed: Color(0xffdee0ff),
      onPrimaryFixed: Color(0xff000841),
      primaryFixedDim: Color(0xffbac3ff),
      onPrimaryFixedVariant: Color(0xff13298f),
      secondaryFixed: Color(0xffdee0ff),
      onSecondaryFixed: Color(0xff070d32),
      secondaryFixedDim: Color(0xffbec4f2),
      onSecondaryFixedVariant: Color(0xff2d3459),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001225),
      tertiaryFixedDim: Color(0xff9ecaff),
      onTertiaryFixedVariant: Color(0xff003862),
      surfaceDim: Color(0xff121319),
      surfaceBright: Color(0xff383940),
      surfaceContainerLowest: Color(0xff0d0e14),
      surfaceContainerLow: Color(0xff1a1b22),
      surfaceContainer: Color(0xff1f1f26),
      surfaceContainerHigh: Color(0xff292930),
      surfaceContainerHighest: Color(0xff34343b),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xfffdfaff),
      surfaceTint: Color(0xffbac3ff),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffc0c7ff),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xfffdfaff),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffc2c8f6),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xfffafaff),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xffa6ceff),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xfffff9f9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffbab1),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff121319),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xfffdfaff),
      outline: Color(0xffcac9d9),
      outlineVariant: Color(0xffcac9d9),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe3e1ea),
      inversePrimary: Color(0xff001a81),
      primaryFixed: Color(0xffe4e5ff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffc0c7ff),
      onPrimaryFixedVariant: Color(0xff000c4e),
      secondaryFixed: Color(0xffe4e5ff),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffc2c8f6),
      onSecondaryFixedVariant: Color(0xff0c1337),
      tertiaryFixed: Color(0xffd9e8ff),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xffa6ceff),
      onTertiaryFixedVariant: Color(0xff00172d),
      surfaceDim: Color(0xff121319),
      surfaceBright: Color(0xff383940),
      surfaceContainerLowest: Color(0xff0d0e14),
      surfaceContainerLow: Color(0xff1a1b22),
      surfaceContainer: Color(0xff1f1f26),
      surfaceContainerHigh: Color(0xff292930),
      surfaceContainerHighest: Color(0xff34343b),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: const TextTheme().apply(
          bodyColor: colorScheme.onSurface,
          displayColor: colorScheme.onSurface,
        ),
        scaffoldBackgroundColor: colorScheme.surface,
        canvasColor: colorScheme.surface,
      );

  List<ExtendedColor> get extendedColors => [];
}

class MaterialTheme3 {
  const MaterialTheme3();

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff515b92),
      surfaceTint: Color(0xff515b92),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xffdee0ff),
      onPrimaryContainer: Color(0xff0b154b),
      secondary: Color(0xff5b5d72),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffe0e1f9),
      onSecondaryContainer: Color(0xff181a2c),
      tertiary: Color(0xff36618e),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffd1e4ff),
      onTertiaryContainer: Color(0xff001d36),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff410002),
      surface: Color(0xfffbf8ff),
      onSurface: Color(0xff1b1b21),
      onSurfaceVariant: Color(0xff46464f),
      outline: Color(0xff767680),
      outlineVariant: Color(0xffc7c5d0),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff303036),
      inversePrimary: Color(0xffbac3ff),
      primaryFixed: Color(0xffdee0ff),
      onPrimaryFixed: Color(0xff0b154b),
      primaryFixedDim: Color(0xffbac3ff),
      onPrimaryFixedVariant: Color(0xff394379),
      secondaryFixed: Color(0xffe0e1f9),
      onSecondaryFixed: Color(0xff181a2c),
      secondaryFixedDim: Color(0xffc3c5dd),
      onSecondaryFixedVariant: Color(0xff434659),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001d36),
      tertiaryFixedDim: Color(0xffa0cafd),
      onTertiaryFixedVariant: Color(0xff194975),
      surfaceDim: Color(0xffdbd9e0),
      surfaceBright: Color(0xfffbf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff5f2fa),
      surfaceContainer: Color(0xffefedf4),
      surfaceContainerHigh: Color(0xffe9e7ef),
      surfaceContainerHighest: Color(0xffe4e1e9),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff353f74),
      surfaceTint: Color(0xff515b92),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff6871aa),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff3f4255),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff717389),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff134570),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff4d77a6),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff8c0009),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffda342e),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffbf8ff),
      onSurface: Color(0xff1b1b21),
      onSurfaceVariant: Color(0xff42424b),
      outline: Color(0xff5e5e67),
      outlineVariant: Color(0xff7a7a83),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff303036),
      inversePrimary: Color(0xffbac3ff),
      primaryFixed: Color(0xff6871aa),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff4f5890),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff717389),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff585b6f),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff4d77a6),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff335e8b),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffdbd9e0),
      surfaceBright: Color(0xfffbf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff5f2fa),
      surfaceContainer: Color(0xffefedf4),
      surfaceContainerHigh: Color(0xffe9e7ef),
      surfaceContainerHighest: Color(0xffe4e1e9),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff131d52),
      surfaceTint: Color(0xff515b92),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff353f74),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff1e2133),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff3f4255),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff002341),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff134570),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff4e0002),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff8c0009),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffbf8ff),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff23232b),
      outline: Color(0xff42424b),
      outlineVariant: Color(0xff42424b),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff303036),
      inversePrimary: Color(0xffeaeaff),
      primaryFixed: Color(0xff353f74),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff1e285d),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff3f4255),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff292c3e),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff134570),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff002e52),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffdbd9e0),
      surfaceBright: Color(0xfffbf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff5f2fa),
      surfaceContainer: Color(0xffefedf4),
      surfaceContainerHigh: Color(0xffe9e7ef),
      surfaceContainerHighest: Color(0xffe4e1e9),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffbac3ff),
      surfaceTint: Color(0xffbac3ff),
      onPrimary: Color(0xff222c61),
      primaryContainer: Color(0xff394379),
      onPrimaryContainer: Color(0xffdee0ff),
      secondary: Color(0xffc3c5dd),
      onSecondary: Color(0xff2d2f42),
      secondaryContainer: Color(0xff434659),
      onSecondaryContainer: Color(0xffe0e1f9),
      tertiary: Color(0xffa0cafd),
      onTertiary: Color(0xff003258),
      tertiaryContainer: Color(0xff194975),
      onTertiaryContainer: Color(0xffd1e4ff),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff121318),
      onSurface: Color(0xffe4e1e9),
      onSurfaceVariant: Color(0xffc7c5d0),
      outline: Color(0xff90909a),
      outlineVariant: Color(0xff46464f),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe4e1e9),
      inversePrimary: Color(0xff515b92),
      primaryFixed: Color(0xffdee0ff),
      onPrimaryFixed: Color(0xff0b154b),
      primaryFixedDim: Color(0xffbac3ff),
      onPrimaryFixedVariant: Color(0xff394379),
      secondaryFixed: Color(0xffe0e1f9),
      onSecondaryFixed: Color(0xff181a2c),
      secondaryFixedDim: Color(0xffc3c5dd),
      onSecondaryFixedVariant: Color(0xff434659),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001d36),
      tertiaryFixedDim: Color(0xffa0cafd),
      onTertiaryFixedVariant: Color(0xff194975),
      surfaceDim: Color(0xff121318),
      surfaceBright: Color(0xff39393f),
      surfaceContainerLowest: Color(0xff0d0e13),
      surfaceContainerLow: Color(0xff1b1b21),
      surfaceContainer: Color(0xff1f1f25),
      surfaceContainerHigh: Color(0xff29292f),
      surfaceContainerHighest: Color(0xff34343a),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffc0c7ff),
      surfaceTint: Color(0xffbac3ff),
      onPrimary: Color(0xff050f46),
      primaryContainer: Color(0xff848dc8),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffc8c9e1),
      onSecondary: Color(0xff121526),
      secondaryContainer: Color(0xff8d8fa6),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffa6ceff),
      onTertiary: Color(0xff00172d),
      tertiaryContainer: Color(0xff6a94c4),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffbab1),
      onError: Color(0xff370001),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff121318),
      onSurface: Color(0xfffdfaff),
      onSurfaceVariant: Color(0xffcbc9d4),
      outline: Color(0xffa3a2ac),
      outlineVariant: Color(0xff83828c),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe4e1e9),
      inversePrimary: Color(0xff3b447a),
      primaryFixed: Color(0xffdee0ff),
      onPrimaryFixed: Color(0xff000841),
      primaryFixedDim: Color(0xffbac3ff),
      onPrimaryFixedVariant: Color(0xff283267),
      secondaryFixed: Color(0xffe0e1f9),
      onSecondaryFixed: Color(0xff0d1021),
      secondaryFixedDim: Color(0xffc3c5dd),
      onSecondaryFixedVariant: Color(0xff323548),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001225),
      tertiaryFixedDim: Color(0xffa0cafd),
      onTertiaryFixedVariant: Color(0xff003862),
      surfaceDim: Color(0xff121318),
      surfaceBright: Color(0xff39393f),
      surfaceContainerLowest: Color(0xff0d0e13),
      surfaceContainerLow: Color(0xff1b1b21),
      surfaceContainer: Color(0xff1f1f25),
      surfaceContainerHigh: Color(0xff29292f),
      surfaceContainerHighest: Color(0xff34343a),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xfffdfaff),
      surfaceTint: Color(0xffbac3ff),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffc0c7ff),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xfffdfaff),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffc8c9e1),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xfffafaff),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xffa6ceff),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xfffff9f9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffbab1),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff121318),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xfffdfaff),
      outline: Color(0xffcbc9d4),
      outlineVariant: Color(0xffcbc9d4),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe4e1e9),
      inversePrimary: Color(0xff1c255a),
      primaryFixed: Color(0xffe4e5ff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffc0c7ff),
      onPrimaryFixedVariant: Color(0xff050f46),
      secondaryFixed: Color(0xffe4e5fe),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffc8c9e1),
      onSecondaryFixedVariant: Color(0xff121526),
      tertiaryFixed: Color(0xffd9e8ff),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xffa6ceff),
      onTertiaryFixedVariant: Color(0xff00172d),
      surfaceDim: Color(0xff121318),
      surfaceBright: Color(0xff39393f),
      surfaceContainerLowest: Color(0xff0d0e13),
      surfaceContainerLow: Color(0xff1b1b21),
      surfaceContainer: Color(0xff1f1f25),
      surfaceContainerHigh: Color(0xff29292f),
      surfaceContainerHighest: Color(0xff34343a),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: const TextTheme().apply(
          bodyColor: colorScheme.onSurface,
          displayColor: colorScheme.onSurface,
        ),
        scaffoldBackgroundColor: colorScheme.surface,
        canvasColor: colorScheme.surface,
      );

  List<ExtendedColor> get extendedColors => [];
}

class MaterialTheme4 {
  const MaterialTheme4();

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff4c5c92),
      surfaceTint: Color(0xff4c5c92),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xffdbe1ff),
      onPrimaryContainer: Color(0xff01174b),
      secondary: Color(0xff595e72),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffdde1f9),
      onSecondaryContainer: Color(0xff161b2c),
      tertiary: Color(0xff36618e),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffd1e4ff),
      onTertiaryContainer: Color(0xff001d36),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff410002),
      surface: Color(0xfffaf8ff),
      onSurface: Color(0xff1a1b21),
      onSurfaceVariant: Color(0xff45464f),
      outline: Color(0xff767680),
      outlineVariant: Color(0xffc6c6d0),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3036),
      inversePrimary: Color(0xffb5c4ff),
      primaryFixed: Color(0xffdbe1ff),
      onPrimaryFixed: Color(0xff01174b),
      primaryFixedDim: Color(0xffb5c4ff),
      onPrimaryFixedVariant: Color(0xff334479),
      secondaryFixed: Color(0xffdde1f9),
      onSecondaryFixed: Color(0xff161b2c),
      secondaryFixedDim: Color(0xffc1c5dd),
      onSecondaryFixedVariant: Color(0xff414659),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001d36),
      tertiaryFixedDim: Color(0xffa0cafd),
      onTertiaryFixedVariant: Color(0xff194975),
      surfaceDim: Color(0xffdad9e0),
      surfaceBright: Color(0xfffaf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff4f3fa),
      surfaceContainer: Color(0xffeeedf4),
      surfaceContainerHigh: Color(0xffe9e7ef),
      surfaceContainerHighest: Color(0xffe3e1e9),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff2f4074),
      surfaceTint: Color(0xff4c5c92),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff6272aa),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff3d4255),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff6f7488),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff134570),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff4d77a6),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff8c0009),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffda342e),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffaf8ff),
      onSurface: Color(0xff1a1b21),
      onSurfaceVariant: Color(0xff41424b),
      outline: Color(0xff5d5e67),
      outlineVariant: Color(0xff797a83),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3036),
      inversePrimary: Color(0xffb5c4ff),
      primaryFixed: Color(0xff6272aa),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff495a8f),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff6f7488),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff565b6f),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff4d77a6),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff335e8b),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffdad9e0),
      surfaceBright: Color(0xfffaf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff4f3fa),
      surfaceContainer: Color(0xffeeedf4),
      surfaceContainerHigh: Color(0xffe9e7ef),
      surfaceContainerHighest: Color(0xffe3e1e9),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff0a1e52),
      surfaceTint: Color(0xff4c5c92),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff2f4074),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff1d2233),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff3d4255),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff002341),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff134570),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff4e0002),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff8c0009),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffaf8ff),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff22242b),
      outline: Color(0xff41424b),
      outlineVariant: Color(0xff41424b),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2f3036),
      inversePrimary: Color(0xffe8ebff),
      primaryFixed: Color(0xff2f4074),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff17295d),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff3d4255),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff272c3e),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff134570),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff002e52),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffdad9e0),
      surfaceBright: Color(0xfffaf8ff),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff4f3fa),
      surfaceContainer: Color(0xffeeedf4),
      surfaceContainerHigh: Color(0xffe9e7ef),
      surfaceContainerHighest: Color(0xffe3e1e9),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffb5c4ff),
      surfaceTint: Color(0xffb5c4ff),
      onPrimary: Color(0xff1b2d61),
      primaryContainer: Color(0xff334479),
      onPrimaryContainer: Color(0xffdbe1ff),
      secondary: Color(0xffc1c5dd),
      onSecondary: Color(0xff2b3042),
      secondaryContainer: Color(0xff414659),
      onSecondaryContainer: Color(0xffdde1f9),
      tertiary: Color(0xffa0cafd),
      onTertiary: Color(0xff003258),
      tertiaryContainer: Color(0xff194975),
      onTertiaryContainer: Color(0xffd1e4ff),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff121318),
      onSurface: Color(0xffe3e1e9),
      onSurfaceVariant: Color(0xffc6c6d0),
      outline: Color(0xff8f909a),
      outlineVariant: Color(0xff45464f),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe3e1e9),
      inversePrimary: Color(0xff4c5c92),
      primaryFixed: Color(0xffdbe1ff),
      onPrimaryFixed: Color(0xff01174b),
      primaryFixedDim: Color(0xffb5c4ff),
      onPrimaryFixedVariant: Color(0xff334479),
      secondaryFixed: Color(0xffdde1f9),
      onSecondaryFixed: Color(0xff161b2c),
      secondaryFixedDim: Color(0xffc1c5dd),
      onSecondaryFixedVariant: Color(0xff414659),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001d36),
      tertiaryFixedDim: Color(0xffa0cafd),
      onTertiaryFixedVariant: Color(0xff194975),
      surfaceDim: Color(0xff121318),
      surfaceBright: Color(0xff38393f),
      surfaceContainerLowest: Color(0xff0d0e13),
      surfaceContainerLow: Color(0xff1a1b21),
      surfaceContainer: Color(0xff1e1f25),
      surfaceContainerHigh: Color(0xff292a2f),
      surfaceContainerHighest: Color(0xff34343a),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffbbc9ff),
      surfaceTint: Color(0xffb5c4ff),
      onPrimary: Color(0xff001241),
      primaryContainer: Color(0xff7e8fc8),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffc6cae1),
      onSecondary: Color(0xff111626),
      secondaryContainer: Color(0xff8b90a5),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffa6ceff),
      onTertiary: Color(0xff00172d),
      tertiaryContainer: Color(0xff6a94c4),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffbab1),
      onError: Color(0xff370001),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff121318),
      onSurface: Color(0xfffcfaff),
      onSurfaceVariant: Color(0xffcacad4),
      outline: Color(0xffa2a2ac),
      outlineVariant: Color(0xff82828c),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe3e1e9),
      inversePrimary: Color(0xff35457a),
      primaryFixed: Color(0xffdbe1ff),
      onPrimaryFixed: Color(0xff000d36),
      primaryFixedDim: Color(0xffb5c4ff),
      onPrimaryFixedVariant: Color(0xff223367),
      secondaryFixed: Color(0xffdde1f9),
      onSecondaryFixed: Color(0xff0b1021),
      secondaryFixedDim: Color(0xffc1c5dd),
      onSecondaryFixedVariant: Color(0xff313548),
      tertiaryFixed: Color(0xffd1e4ff),
      onTertiaryFixed: Color(0xff001225),
      tertiaryFixedDim: Color(0xffa0cafd),
      onTertiaryFixedVariant: Color(0xff003862),
      surfaceDim: Color(0xff121318),
      surfaceBright: Color(0xff38393f),
      surfaceContainerLowest: Color(0xff0d0e13),
      surfaceContainerLow: Color(0xff1a1b21),
      surfaceContainer: Color(0xff1e1f25),
      surfaceContainerHigh: Color(0xff292a2f),
      surfaceContainerHighest: Color(0xff34343a),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xfffcfaff),
      surfaceTint: Color(0xffb5c4ff),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffbbc9ff),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xfffcfaff),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffc6cae1),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xfffafaff),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xffa6ceff),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xfffff9f9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffbab1),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff121318),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xfffcfaff),
      outline: Color(0xffcacad4),
      outlineVariant: Color(0xffcacad4),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe3e1e9),
      inversePrimary: Color(0xff14275a),
      primaryFixed: Color(0xffe1e6ff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffbbc9ff),
      onPrimaryFixedVariant: Color(0xff001241),
      secondaryFixed: Color(0xffe2e6fe),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffc6cae1),
      onSecondaryFixedVariant: Color(0xff111626),
      tertiaryFixed: Color(0xffd9e8ff),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xffa6ceff),
      onTertiaryFixedVariant: Color(0xff00172d),
      surfaceDim: Color(0xff121318),
      surfaceBright: Color(0xff38393f),
      surfaceContainerLowest: Color(0xff0d0e13),
      surfaceContainerLow: Color(0xff1a1b21),
      surfaceContainer: Color(0xff1e1f25),
      surfaceContainerHigh: Color(0xff292a2f),
      surfaceContainerHighest: Color(0xff34343a),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: const TextTheme().apply(
          bodyColor: colorScheme.onSurface,
          displayColor: colorScheme.onSurface,
        ),
        scaffoldBackgroundColor: colorScheme.surface,
        canvasColor: colorScheme.surface,
      );

  List<ExtendedColor> get extendedColors => [];
}

class ExtendedColor {
  final Color seed, value;
  final ColorFamily light;
  final ColorFamily lightHighContrast;
  final ColorFamily lightMediumContrast;
  final ColorFamily dark;
  final ColorFamily darkHighContrast;
  final ColorFamily darkMediumContrast;

  const ExtendedColor({
    required this.seed,
    required this.value,
    required this.light,
    required this.lightHighContrast,
    required this.lightMediumContrast,
    required this.dark,
    required this.darkHighContrast,
    required this.darkMediumContrast,
  });
}

class ColorFamily {
  const ColorFamily({
    required this.color,
    required this.onColor,
    required this.colorContainer,
    required this.onColorContainer,
  });

  final Color color;
  final Color onColor;
  final Color colorContainer;
  final Color onColorContainer;
}
